node(){
     /*     def dockerCMD
          def tagName
    
    stage('prepare enviroment'){
        echo 'initialize all the variables'
        dockerCMD = "${docker}/bin/docker"
        tagName="3.0"
    }
*/
	stage('Code Checkout'){
	checkout changelog: false, poll: false, scm: scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'GitHubcredd', url: 'https://github.com/ZarrinMujahid/star-agile-banking-finance']])
	}
	stage('Build Automation'){
		sh """
			ls -lart
			mvn clean install
			ls -lart target

		"""
	} 
      }
           /*   stage('Image Prune'){
               sh "docker image prune -f"
	      }*/
             stage('Build docker image') {
          //  sh ' sudo chmod 777 /var/run/docker.sock'
             sh 'echo "Building the image"'
             sh "docker version"
             sh "docker build -t star-agile-banking-finance/new-img:latest ."
             sh "docker image list"
	     } 
           
             
          stage('Pushing it to the DockerHub'){
            echo 'Pushing the docker image to DockerHub'
              def tag ="latest"
              def dockerHubUser="zarrinmujahid"
             
            withCredentials([usernamePassword(credentialsId:'dockerHubAccount', usernameVariable:'dockerUser',passwordVariable:'dockerPassword')]) {
            sh "docker login -u $dockerUser -p $dockerPassword"
            sh "docker tag $star-agile-banking-finance/new-img:$tag $dockerUser/$star-agile-banking-finance/new-img:$tag"
            sh "docker pushb$dockerUser/$star-agile-banking-finance/new-img:$tag"
            echo "Image Puch complete"
             }
        
           stage('Configure and Deploy to the test-server'){
           ansiblePlaybook become: true, credentialsId: 'ansible-key', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'ansible-playbook.yml'
           } 
           stage("Run Docker Image"){
           sh "docker run -d -p 8081:8081 star-agile-banking-finance/new-img:latest"
	   }
   	}
