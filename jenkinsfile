node(){
          def dockerCMD
          def tagName
    
    stage('prepare enviroment'){
        echo 'initialize all the variables'
        dockerCMD = "${docker}/bin/docker"
        tagName="3.0"
    }

	stage('Code Checkout'){
	checkout changelog: false, poll: false, scm: scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'GitHubcredd', url: 'https://github.com/ZarrinMujahid/star-agile-banking-finance']])
	}
	stage('Build Automation'){
		sh """
			ls -lart
			mvn clean install
			ls -lart target

		"""
	} 

            stage('Containerize the application'){
            // Ensure Docker is available in the PATH
                    def dockerTool = tool name: 'docker', type: 'org.jenkinsci.plugins.docker.commons.tools.DockerTool'
                    env.PATH = "${dockerTool}/bin:${env.PATH}"

                    // Your Docker commands go here
                    sh 'docker --version'
                    sh 'docker build -t my-image .'
            }

          /*   stage('Build docker image') {
             sh ' sudo chmod 777 /var/run/docker.sock'
             sh 'echo "Building the image"'
             sh "docker version"
             sh "docker build -t star-agile-banking-finance/new-img:latest ."
             sh "docker image list"
	     } */

             stage('Pushing it ot the DockerHub'){
            echo 'Pushing the docker image to DockerHub'
            //sh ' sudo chmod 777 /var/run/docker.sock'
            withCredentials([string(credentialsId: 'dock-password', variable: 'dockerHubPassword')]) {
            sh "${dockerCMD} login -u ZarrinMujahid -p ${dockerHubPassword}"
            sh "${dockerCMD} push ZarrinMujahid/insure-me:${tagName}"
            
             }
        }    
        
       /*    stage('Configure and Deploy to the test-server'){
           ansiblePlaybook become: true, credentialsId: 'ansible-key', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'ansible-playbook.yml'
           } */
           stage("Run Docker Image"){
           sh "docker run -d -p 8081:8081 star-agile-banking-finance/my-note-app:latest"
	   }
   	}
